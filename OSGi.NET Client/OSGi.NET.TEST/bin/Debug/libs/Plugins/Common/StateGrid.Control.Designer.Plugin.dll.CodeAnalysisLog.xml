<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Namespaces>
  <Namespace Name="StateGrid.Control">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.Designer">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.Designer' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.Gauges">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.Gauges' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.Gauges.PropertyEditor">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.Gauges.PropertyEditor' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.Mapping.PropertyEditor">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.Mapping.PropertyEditor' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.MutiHeadTable">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.MutiHeadTable' with another namespace.</Issue>
    </Message>
    <Message Id="Muti" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Muti' in namespace name 'StateGrid.Control.MutiHeadTable'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="StateGrid.Control.Terminals">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'StateGrid.Control.Terminals' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="F:\Work\启明星\visualdesktop\融合平台客户端\Output\AppData\Plugins\Common\StateGrid.Control.Designer.Plugin.dll">
   <Modules>
    <Module Name="stategrid.control.designer.plugin.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'StateGrid.Control.Designer.Plugin.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'StateGrid.Control.Designer.Plugin.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="StateGrid.Control">
       <Types>
        <Type Name="ControlDesignerPlugin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'ControlDesignerPlugin' is coupled with 94 different types from 25 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Initialize(Techstar.ITechstarManager)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin" File="ControlDesignerPlugin.cs" Line="110">'ControlDesignerPlugin.Initialize(ITechstarManager)' is coupled with 93 different types from 25 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataSourceDynamicRow" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#TryGetMember(System.Dynamic.GetMemberBinder,System.Object&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DictionaryPropertyDialog.xaml.cs" Line="446">In externally visible method 'DataSourceDynamicRow.TryGetMember(GetMemberBinder, out object)', validate parameter 'binder' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DictionaryPropertyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;VisualDiagram.DataBinding.VSDataSource&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DictionaryPropertyDialog.xaml.cs" Line="39">Change 'List&lt;VSDataSource&gt;' in 'DictionaryPropertyDialog.DictionaryPropertyDialog(List&lt;VSDataSource&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowData(VisualDiagram.Data.VSDataset)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DictionaryPropertyDialog.xaml.cs" Line="309">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DictionaryPropertyDialog.ShowData(VSDataset)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SelectDemension" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demension' in type name 'SelectDemension'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'IsChanged' and 'Ischanged' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_curDemensionType" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cur" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'cur' in member name 'SelectDemension._curDemensionType' by changing it to 'Cur'.</Issue>
            </Message>
            <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demension' in member name 'SelectDemension._curDemensionType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'SelectDemension._curDemensionType'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_demensionList" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SelectDemension._demensionList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;object&gt;' in 'SelectDemension._demensionList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'demension' in member name 'SelectDemension._demensionList' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SelectDemension._Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#demensionTypeModel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SelectDemension.demensionTypeModel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'demension' in member name 'SelectDemension.demensionTypeModel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="SelectDemension.xaml.cs" Line="143">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SelectDemension.Exists(string, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="SelectDemension.xaml.cs" Line="143">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SelectDemension.Exists(string, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ischanged" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SelectDemension.Ischanged' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Ischanged" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ischanged' in member name 'SelectDemension.Ischanged' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SyncDemensionData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="SelectDemension.xaml.cs" Line="189">Correct the spelling of 'Demension' in member name 'SelectDemension.SyncDemensionData()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypeConver" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DictionaryPropertyDialog.xaml.cs" Line="528">In externally visible method 'TypeConver.ConvertBack(object, Type, object, CultureInfo)', validate parameter 'parameter' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.ActiveX">
       <Types>
        <Type Name="ActiveXActionGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="ActiveXHostGridItem.cs" Line="173">Modify 'ActiveXActionGridItem.ComboBoxSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="ActiveXHostGridItem.cs" Line="123">Modify 'ActiveXActionGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="ActiveXHostGridItem.cs" Line="123">Ensure that 'ActiveXActionGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillActions()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="ActiveXHostGridItem.cs" Line="199">Modify 'ActiveXActionGridItem.FillActions()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="ActiveXHostGridItem.cs" Line="221">Modify 'ActiveXActionGridItem.LoadItems()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlEditorDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnClear_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.WebBrowser.NavigateToString(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="199">Method 'HtmlEditorDialog.btnClear_Click(object, RoutedEventArgs)' passes a literal string as parameter 'text' of a call to 'WebBrowser.NavigateToString(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="271">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'HtmlEditorDialog.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="271">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'HtmlEditorDialog.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BtnRemoveClick(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.WebBrowser.NavigateToString(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="136">Method 'HtmlEditorDialog.BtnRemoveClick(object, RoutedEventArgs)' passes a literal string as parameter 'text' of a call to 'WebBrowser.NavigateToString(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlParamEditorDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Param' in type name 'HtmlParamEditorDialog'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TestScript" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#notify(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="310">Method 'TestScript.notify(string)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "print test Script".</Issue>
            </Message>
            <Message Id="notify" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="309">Correct the casing of 'notify' in member name 'TestScript.notify(string)' by changing it to 'Notify'.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\ActiveX" File="HtmlEditorDialog.xaml.cs" Line="309">In method 'TestScript.notify(string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.BubbleChart">
       <Types>
        <Type Name="TMultiBubbleCustomGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'TMultiBubbleCustomGridItem'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\BubbleChart" File="TMultiBubbleCustomGridItem.cs" Line="68">Modify 'TMultiBubbleCustomGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\BubbleChart" File="TMultiBubbleCustomGridItem.cs" Line="68">Ensure that 'TMultiBubbleCustomGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TMultiBubbleCustomGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.BubbleChart.BaseBubbleChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\BubbleChart" File="TSeriesDialog.xaml.cs" Line="45">In externally visible method 'TSeriesDialog.TSeriesDialog(BaseBubbleChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="xFixedWidthGridViewColumn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'x' in type name 'xFixedWidthGridViewColumn' by changing it to 'X'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Charts">
       <Types>
        <Type Name="CalcExpressionGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Calc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Calc' in type name 'CalcExpressionGridItem'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_button_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.TextBox.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="CalcExpressionGridItem.cs" Line="148">Method 'CalcExpressionGridItem._button_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " #AxisXLabel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="CalcExpressionGridItem.cs" Line="158">Method 'CalcExpressionGridItem._button_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " #Percentage%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="CalcExpressionGridItem.cs" Line="153">Method 'CalcExpressionGridItem._button_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBox.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " #YValue".</Issue>
            </Message>
            <Message Id="AxisXLabel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="CalcExpressionGridItem.cs" Line="148">Correct the spelling of the unrecognized token 'AxisXLabel' in the literal '" #AxisXLabel"'.</Issue>
            </Message>
            <Message Id="YValue" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="CalcExpressionGridItem.cs" Line="153">Correct the spelling of the unrecognized token 'YValue' in the literal '" #YValue"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ColorSetGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="ColorSetGridItem.cs" Line="155">Modify 'ColorSetGridItem.ComboBoxSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="ColorSetGridItem.cs" Line="80">Modify 'ColorSetGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="ColorSetGridItem.cs" Line="80">Ensure that 'ColorSetGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyValueChanged()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="ColorSetGridItem.cs" Line="126">Modify 'ColorSetGridItem.PropertyValueChanged()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RadarSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TRadarChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="RadarSeriesDialog.xaml.cs" Line="56">In externally visible method 'RadarSeriesDialog.RadarSeriesDialog(TRadarChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TRingDataConverterEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cbox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="TRingDataConverterEditor.xaml.cs" Line="65">'sender', a parameter, is cast to type 'ComboBox' multiple times in method 'TRingDataConverterEditor.cbox_SelectionChanged(object, SelectionChangedEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Charts.PropertyEditor">
       <Types>
        <Type Name="ColorsDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IList`1&lt;System.Windows.Media.Color&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="ColorsDialog.xaml.cs" Line="52">In externally visible method 'ColorsDialog.ColorsDialog(IList&lt;Color&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SpiderChartDataSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TSpiderChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="SpiderChartDataSeriesDialog.xaml.cs" Line="56">In externally visible method 'SpiderChartDataSeriesDialog.SpiderChartDataSeriesDialog(TSpiderChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyChanged(System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="SpiderChartDataSeriesDialog.xaml.cs" Line="217">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SpiderChartDataSeriesDialog.PropertyChanged(PropertyInfo)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SpiderTrendLineDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TSpiderChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="SpiderTrendLineDialog.xaml.cs" Line="55">In externally visible method 'SpiderTrendLineDialog.SpiderTrendLineDialog(TSpiderChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Charts3D">
       <Types>
        <Type Name="Chart3DBaseDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'Chart3DBaseDialog' to protected.</Issue>
          </Message>
          <Message Id="DBase" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DBase' in type name 'Chart3DBaseDialog' exists as a discrete term. If your usage is intended to be single word, case it as 'Dbase'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts3D.TNewChart3D,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DBaseDialog.cs" Line="34">'Chart3DBaseDialog.Chart3DBaseDialog(TNewChart3D, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Chart3DBaseDialog..ctor(TNewChart3D, PropertyInfo)&#xD;&#xA;Chart3DBaseDialog.SetTitle(PropertyInfo):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyInfo" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Chart3DBaseDialog.propertyInfo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyPage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Chart3DBaseDialog.propertyPage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyPage_OnItemPropertyChanged(Diagram.Interfaces.IPropertyPanelGridItem,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DBaseDialog.cs" Line="72">Correct the casing of 'property' in member name 'Chart3DBaseDialog.propertyPage_OnItemPropertyChanged(IPropertyPanelGridItem, object)' by changing it to 'Property'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DBaseDialog.cs" Line="72">Remove the underscores from member name 'Chart3DBaseDialog.propertyPage_OnItemPropertyChanged(IPropertyPanelGridItem, object)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#quadrantChart" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Chart3DBaseDialog.quadrantChart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTitle(System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DBaseDialog.cs" Line="59">In externally visible method 'Chart3DBaseDialog.SetTitle(PropertyInfo)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
            <Message Id="propertyInfo" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DBaseDialog.cs" Line="58">'propertyInfo', a parameter declared in 'Chart3DBaseDialog.SetTitle(PropertyInfo)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Chart3DCustomDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts3D.TNewChart3D,System.Object,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DCustomDialog.xaml.cs" Line="35">'Chart3DCustomDialog.Chart3DCustomDialog(TNewChart3D, object, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Chart3DCustomDialog..ctor(TNewChart3D, Object, PropertyInfo)&#xD;&#xA;Chart3DBaseDialog.SetPosition():Void</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DCustomDialog.xaml.cs" Line="35">In member 'Chart3DCustomDialog.Chart3DCustomDialog(TNewChart3D, object, PropertyInfo)', consider replacing the data type identifier 'Object' in parameter name 'propertyObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Chart3DDataSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts3D.TNewChart3D,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DDataSeriesDialog.xaml.cs" Line="38">'Chart3DDataSeriesDialog.Chart3DDataSeriesDialog(TNewChart3D, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Chart3DDataSeriesDialog..ctor(TNewChart3D, PropertyInfo)&#xD;&#xA;Chart3DDataSeriesDialog.set_DataSeries(TChart3DD&#xD;&#xA;Chart3DBaseDialog.SetPosition():Void</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="Chart3DDataSeriesDialog.xaml.cs" Line="43">In externally visible method 'Chart3DDataSeriesDialog.Chart3DDataSeriesDialog(TNewChart3D, PropertyInfo)', validate parameter 'quadrantChart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TChart3DItemConverterEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RelationFields" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="188">Change 'TChart3DItemConverterEditor.RelationFields' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextFields" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="208">Change 'TChart3DItemConverterEditor.TextFields' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VSDataSources" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="168">Change 'TChart3DItemConverterEditor.VSDataSources' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="55">Change 'TChart3DItemConverterEditor.XValues' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#YValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="75">Change 'TChart3DItemConverterEditor.YValues' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ZValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Chart3D" File="TChart3DItemConverterEditor.xaml.cs" Line="95">Change 'TChart3DItemConverterEditor.ZValues' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Common">
       <Types>
        <Type Name="DemensionPropertyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demension' in type name 'DemensionPropertyDialog'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Common.TLoopDemension)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyDialog.xaml.cs" Line="57">In method 'DemensionPropertyDialog.DemensionPropertyDialog(TLoopDemension)', correct the spelling of 'Demension' in parameter name 'loopDemension' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyDialog.xaml.cs" Line="62">In externally visible method 'DemensionPropertyDialog.DemensionPropertyDialog(TLoopDemension)', validate parameter 'loopDemension' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DemensionPropertyGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demension' in type name 'DemensionPropertyGridItem'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyGridItem.cs" Line="68">Modify 'DemensionPropertyGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyGridItem.cs" Line="68">Ensure that 'DemensionPropertyGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DemensionPropertyGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="launch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyGridItem.cs" Line="101">Correct the casing of 'launch' in member name 'DemensionPropertyGridItem.launchEditorButton_Click(object, RoutedEventArgs)' by changing it to 'Launch'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="DemensionPropertyGridItem.cs" Line="101">Remove the underscores from member name 'DemensionPropertyGridItem.launchEditorButton_Click(object, RoutedEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FlashSourceGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose methods should call base class dispose" Category="Microsoft.Usage" CheckId="CA2215" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="FlashSourceGridItem.cs" Line="73">Ensure that method 'FlashSourceGridItem.Dispose()' calls base.'FlashSourceGridItem.Dispose()' in all possible control flow paths.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="FlashSourceGridItem.cs" Line="70">Modify 'FlashSourceGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="FlashSourceGridItem.cs" Line="70">Ensure that 'FlashSourceGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FlashSourceGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FolderBrowserDialogEx" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="TypeNewerVersion" Certainty="95" Level="CriticalError">Either replace the suffix 'Ex' in type name 'FolderBrowserDialogEx' with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the type it replaces.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_hwndEdit" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'FolderBrowserDialogEx._hwndEdit' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ComputerBrowser()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="801">In method 'FolderBrowserDialogEx.ComputerBrowser()', object 'x' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'x' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DontIncludeNetworkFoldersBelowDomainLevel" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dont" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="636">Replace the term 'Dont' in member name 'FolderBrowserDialogEx.DontIncludeNetworkFoldersBelowDomainLevel' with the preferred alternate 'DoNot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrinterBrowser()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="816">In method 'FolderBrowserDialogEx.PrinterBrowser()', object 'x' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'x' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rootFolderLocation" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'FolderBrowserDialogEx.rootFolderLocation' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunDialog(System.IntPtr)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="DebuggingException" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="909">Correct the spelling of the unrecognized token 'DebuggingException' in the literal '"DebuggingException: ThreadMustBeSTA"'.</Issue>
            </Message>
            <Message Id="FolderBrowserDialogNoRootFolder" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="874">Correct the spelling of the unrecognized token 'FolderBrowserDialogNoRootFolder' in the literal '"FolderBrowserDialogNoRootFolder"'.</Issue>
            </Message>
            <Message Id="ThreadMustBeSTA" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="909">Correct the spelling of the unrecognized token 'ThreadMustBeSTA' in the literal '"DebuggingException: ThreadMustBeSTA"'.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="864">In member 'FolderBrowserDialogEx.RunDialog(IntPtr)', change parameter name 'hWndOwner' to 'hwndOwner' in order to match the identifier as it has been declared in 'CommonDialog.RunDialog(IntPtr)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InteractionElementDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(VisualDiagram.Items.InteractionElement)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="TInteractionRegionDialog.xaml.cs" Line="76">In externally visible method 'InteractionElementDialog.InteractionElementDialog(InteractionElement)', validate parameter 'interactionRegion' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InteractionObjects" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="TInteractionRegionDialog.xaml.cs" Line="53">Consider a design where 'InteractionElementDialog.InteractionObjects' doesn't nest generic type 'Dictionary&lt;Automated, IList&lt;DeviceEvent&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InteractionElementGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose methods should call base class dispose" Category="Microsoft.Usage" CheckId="CA2215" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="InteractionElementGridItem.cs" Line="73">Ensure that method 'InteractionElementGridItem.Dispose()' calls base.'InteractionElementGridItem.Dispose()' in all possible control flow paths.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="InteractionElementGridItem.cs" Line="70">Modify 'InteractionElementGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="InteractionElementGridItem.cs" Line="70">Ensure that 'InteractionElementGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'InteractionElementGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LayerPropertyGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="LayerPropertyGridItem.cs" Line="68">Modify 'LayerPropertyGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="LayerPropertyGridItem.cs" Line="68">Ensure that 'LayerPropertyGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LayerPropertyGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="launch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="LayerPropertyGridItem.cs" Line="101">Correct the casing of 'launch' in member name 'LayerPropertyGridItem.launchEditorButton_Click(object, RoutedEventArgs)' by changing it to 'Launch'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="LayerPropertyGridItem.cs" Line="101">Remove the underscores from member name 'LayerPropertyGridItem.launchEditorButton_Click(object, RoutedEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LoopDemensionDesigner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Demension" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demension' in type name 'LoopDemensionDesigner'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MediaDesigner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Execute(VisualDiagram.Element)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaDesigner.cs" Line="41">In externally visible method 'MediaDesigner.Execute(Element)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MediaSourceEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(VisualDiagram.CanvasEx,System.Type,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="84">'MediaSourceEditor.MediaSourceEditor(CanvasEx, Type, string, bool)' is coupled with 35 different types from 14 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="84">Replace method 'MediaSourceEditor.MediaSourceEditor(CanvasEx, Type, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="99">In externally visible method 'MediaSourceEditor.MediaSourceEditor(CanvasEx, Type, string, bool)', validate parameter 'canvas' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnLoad_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="382">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.btnLoad_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="382">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.btnLoad_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="440">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="440">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnSelectImagePath(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="218">In method 'MediaSourceEditor.OnSelectImagePath(object, RoutedEventArgs)', call System.IDisposable.Dispose on object 'dialog' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReveResource" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Reve' in member name 'MediaSourceEditor.ReveResource' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSource(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="299">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.SelectSource(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="299">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.SelectSource(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceEditor.xaml.cs" Line="299">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MediaSourceEditor.SelectSource(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MediaSourceGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceGridItem.cs" Line="70">Modify 'MediaSourceGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Common" File="MediaSourceGridItem.cs" Line="70">Ensure that 'MediaSourceGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MediaSourceGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PInvoke+Shell32" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#SHBrowseForFolder(StateGrid.Control.Common.PInvoke+BROWSEINFO)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.Shell32.SHBrowseForFolder(PInvoke.BROWSEINFO)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="BROWSEINFO.Title" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="FieldImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal field 'PInvoke.BROWSEINFO.Title' as Unicode, by setting StructLayout.CharSet on 'PInvoke.BROWSEINFO' to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHGetMalloc(StateGrid.Control.Common.PInvoke+IMalloc[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.Shell32.SHGetMalloc(PInvoke.IMalloc[])' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHGetPathFromIDList(System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.Shell32.SHGetPathFromIDList(IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHGetSpecialFolderLocation(System.IntPtr,System.Int32,System.IntPtr&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.Shell32.SHGetSpecialFolderLocation(IntPtr, int, ref IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PInvoke+User32" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindowEx(System.Runtime.InteropServices.HandleRef,System.IntPtr,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.User32.FindWindowEx(HandleRef, IntPtr, string, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpszClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpszWindow' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.User32.SendMessage(HandleRef, int, int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.User32.SendMessage(HandleRef, int, int, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lParam' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowText(System.IntPtr,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'PInvoke.User32.SetWindowText(IntPtr, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'text' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Gauges">
       <Types>
        <Type Name="MapDesigner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Execute(VisualDiagram.Element)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapDesigner.cs" Line="42">In externally visible method 'MapDesigner.Execute(Element)', validate parameter 'element' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Gauges.PropertyEditor">
       <Types>
        <Type Name="TGaugeGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Gauges" File="TGaugeGridItem.cs" Line="71">Modify 'TGaugeGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Gauges" File="TGaugeGridItem.cs" Line="71">Ensure that 'TGaugeGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TGaugeGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TRangesCustomDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Gauges.TGaugeBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Gauges" File="TRangesCustomDialog.xaml.cs" Line="55">In externally visible method 'TRangesCustomDialog.TRangesCustomDialog(TGaugeBase)', validate parameter 'gauge' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.MutiHeadTable">
       <Types>
        <Type Name="GridColumnSpanDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.MutiHeadTable.TMutiHeadDataGrid)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="119">In externally visible method 'GridColumnSpanDialog.GridColumnSpanDialog(TMutiHeadDataGrid)', validate parameter 'grid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#border_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="border" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="200">Correct the casing of 'border' in member name 'GridColumnSpanDialog.border_MouseLeftButtonDown(object, MouseButtonEventArgs)' by changing it to 'Border'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="200">Remove the underscores from member name 'GridColumnSpanDialog.border_MouseLeftButtonDown(object, MouseButtonEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="201">In externally visible method 'GridColumnSpanDialog.border_MouseLeftButtonDown(object, MouseButtonEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#border_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="border" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="227">Correct the casing of 'border' in member name 'GridColumnSpanDialog.border_MouseLeftButtonUp(object, MouseButtonEventArgs)' by changing it to 'Border'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="227">Remove the underscores from member name 'GridColumnSpanDialog.border_MouseLeftButtonUp(object, MouseButtonEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#border_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="border" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="244">Correct the casing of 'border' in member name 'GridColumnSpanDialog.border_MouseMove(object, MouseEventArgs)' by changing it to 'Border'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="244">Remove the underscores from member name 'GridColumnSpanDialog.border_MouseMove(object, MouseEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnClose_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="329">Correct the casing of 'btn' in member name 'GridColumnSpanDialog.btnClose_Click(object, RoutedEventArgs)' by changing it to 'Btn'.</Issue>
            </Message>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="329">Correct the spelling of 'btn' in member name 'GridColumnSpanDialog.btnClose_Click(object, RoutedEventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="329">Remove the underscores from member name 'GridColumnSpanDialog.btnClose_Click(object, RoutedEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateControl(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="142">In method 'GridColumnSpanDialog.CreateControl(int, int)', correct the spelling of 'n' in parameter name 'nColumn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="GridColumnSpanDialog.xaml.cs" Line="142">In method 'GridColumnSpanDialog.CreateControl(int, int)', correct the spelling of 'n' in parameter name 'nRow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RowColorsPropertyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.MutiHeadTable.TMutiHeadDataGrid)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="RowColorsPropertyDialog.xaml.cs" Line="56">In externally visible method 'RowColorsPropertyDialog.RowColorsPropertyDialog(TMutiHeadDataGrid)', validate parameter 'grid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TMutiHeadGridColumnCustomGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Muti" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Muti' in type name 'TMutiHeadGridColumnCustomGridItem'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="TMutiHeadGridColumnCustomGridItem.cs" Line="68">Modify 'TMutiHeadGridColumnCustomGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="TMutiHeadGridColumnCustomGridItem.cs" Line="68">Ensure that 'TMutiHeadGridColumnCustomGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TMutiHeadGridColumnCustomGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TMutiHeadGridColumnFieldGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Muti" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Muti' in type name 'TMutiHeadGridColumnFieldGridItem'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="TMutiHeadGridColumnFieldGridItem.cs" Line="132">Modify 'TMutiHeadGridColumnFieldGridItem.ComboBoxSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="TMutiHeadGridColumnFieldGridItem.cs" Line="82">Modify 'TMutiHeadGridColumnFieldGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\MutiHeadTable" File="TMutiHeadGridColumnFieldGridItem.cs" Line="82">Ensure that 'TMutiHeadGridColumnFieldGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.PropertyEditor">
       <Types>
        <Type Name="DataSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="DataSeriesDialog.xaml.cs" Line="58">In externally visible method 'DataSeriesDialog.DataSeriesDialog(TChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapConnectionDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Mapping.TMap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapConnectionDialog.xaml.cs" Line="59">In externally visible method 'MapConnectionDialog.MapConnectionDialog(TMap)', validate parameter 'map' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapFileEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(VisualDiagram.CanvasEx,System.Type,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="94">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="97">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="105">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="105">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="90">In externally visible method 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)', validate parameter 'canvas' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnLoad_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="239">In method 'MapFileEditor.btnLoad_Click(object, RoutedEventArgs)', object 'shpStream' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'shpStream' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="230">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnLoad_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="305">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="305">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImagesSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="161">In method 'MapFileEditor.ImagesSelectionChanged(object, SelectionChangedEventArgs)', call System.IDisposable.Dispose on object 'new MemoryStream(resource.DbfResource.Content)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="161">In method 'MapFileEditor.ImagesSelectionChanged(object, SelectionChangedEventArgs)', call System.IDisposable.Dispose on object 'new MemoryStream(resource.ShpResource.Content)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapFileItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,VisualDiagram.Common.BusinessResource,VisualDiagram.Common.BusinessResource)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="shp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapFileEditor.xaml.cs" Line="393">In method 'MapFileItem.MapFileItem(string, BusinessResource, BusinessResource)', correct the spelling of 'shp' in parameter name 'shpResource' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShpResource" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Shp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Shp' in member name 'MapFileItem.ShpResource' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapItemNameGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_comboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapConnectionDialog.xaml.cs" Line="345">Modify 'MapItemNameGridItem._comboBox_SelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapConnectionDialog.xaml.cs" Line="225">Modify 'MapItemNameGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapConnectionDialog.xaml.cs" Line="225">Ensure that 'MapItemNameGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyValueChanged()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="MapConnectionDialog.xaml.cs" Line="288">Modify 'MapItemNameGridItem.PropertyValueChanged()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TChartCustomDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TChart,System.Object,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="TChartCustomDialog.xaml.cs" Line="61">In member 'TChartCustomDialog.TChartCustomDialog(TChart, object, PropertyInfo)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="TChartCustomDialog.xaml.cs" Line="75">In externally visible method 'TChartCustomDialog.TChartCustomDialog(TChart, object, PropertyInfo)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TMapItemEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Mapping.TMap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Mapping" File="TMapItemEditor.xaml.cs" Line="57">In externally visible method 'TMapItemEditor.TMapItemEditor(TMap)', validate parameter 'chinaMap' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrendLineDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Charts.TChart)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Charts" File="TrendLineDialog.xaml.cs" Line="58">In externally visible method 'TrendLineDialog.TrendLineDialog(TChart)', validate parameter 'chart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.QuadrantChart">
       <Types>
        <Type Name="BaseDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'BaseDialog' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(StateGrid.Control.QuadrantChart.TQuadrantChart,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="BaseDialog.cs" Line="33">'BaseDialog.BaseDialog(TQuadrantChart, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BaseDialog..ctor(TQuadrantChart, PropertyInfo)&#xD;&#xA;BaseDialog.SetTitle(PropertyInfo):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyInfo" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BaseDialog.propertyInfo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyPage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BaseDialog.propertyPage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#propertyPage_OnItemPropertyChanged(Diagram.Interfaces.IPropertyPanelGridItem,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="BaseDialog.cs" Line="71">Correct the casing of 'property' in member name 'BaseDialog.propertyPage_OnItemPropertyChanged(IPropertyPanelGridItem, object)' by changing it to 'Property'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="BaseDialog.cs" Line="71">Remove the underscores from member name 'BaseDialog.propertyPage_OnItemPropertyChanged(IPropertyPanelGridItem, object)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#quadrantChart" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BaseDialog.quadrantChart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTitle(System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="BaseDialog.cs" Line="58">In externally visible method 'BaseDialog.SetTitle(PropertyInfo)', validate parameter 'propertyInfo' before using it.</Issue>
            </Message>
            <Message Id="propertyInfo" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="BaseDialog.cs" Line="57">'propertyInfo', a parameter declared in 'BaseDialog.SetTitle(PropertyInfo)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.QuadrantChart.TQuadrantChart,System.Object,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="CustomDialog.xaml.cs" Line="34">'CustomDialog.CustomDialog(TQuadrantChart, object, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;CustomDialog..ctor(TQuadrantChart, Object, PropertyInfo)&#xD;&#xA;BaseDialog.SetPosition():Void</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="CustomDialog.xaml.cs" Line="34">In member 'CustomDialog.CustomDialog(TQuadrantChart, object, PropertyInfo)', consider replacing the data type identifier 'Object' in parameter name 'propertyObject' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataSeriesDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.QuadrantChart.TQuadrantChart,System.Reflection.PropertyInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="DataSeriesDialog.xaml.cs" Line="35">'DataSeriesDialog.DataSeriesDialog(TQuadrantChart, PropertyInfo)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;DataSeriesDialog..ctor(TQuadrantChart, PropertyInfo)&#xD;&#xA;DataSeriesDialog.set_DataSeries(Observabl&#xD;&#xA;BaseDialog.SetPosition():Void</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="DataSeriesDialog.xaml.cs" Line="40">In externally visible method 'DataSeriesDialog.DataSeriesDialog(TQuadrantChart, PropertyInfo)', validate parameter 'quadrantChart' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataSeries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="DataSeriesDialog.xaml.cs" Line="55">Change 'DataSeriesDialog.DataSeries' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FontDialog+FontItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'FontDialog.FontItem'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Windows.Media.FontFamily)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="FontDialog.xaml.cs" Line="124">In externally visible method 'FontDialog.FontItem.FontItem(FontFamily)', validate parameter 'font' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFontItems()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="FontDialog.xaml.cs" Line="180">Change 'FontDialog.FontItem.GetFontItems()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SeriesConditionDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.QuadrantChart.TSeriesCondition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="SeriesConditionDialog.xaml.cs" Line="44">In externally visible method 'SeriesConditionDialog.SeriesConditionDialog(TSeriesCondition)', validate parameter 'condition' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TQuadrantItemConverterEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Labels" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="95">Change 'TQuadrantItemConverterEditor.Labels' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RelationFields" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="188">Change 'TQuadrantItemConverterEditor.RelationFields' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SeriesConditions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="366">Change 'TQuadrantItemConverterEditor.SeriesConditions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextFields" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="208">Change 'TQuadrantItemConverterEditor.TextFields' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VSDataSources" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="168">Change 'TQuadrantItemConverterEditor.VSDataSources' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="55">Change 'TQuadrantItemConverterEditor.XValues' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#YValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\QuadrantChart" File="TQuadrantItemConverterEditor.xaml.cs" Line="75">Change 'TQuadrantItemConverterEditor.YValues' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Table">
       <Types>
        <Type Name="GridColumnPropertyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Table.TDataGrid)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="GridColumnPropertyDialog.xaml.cs" Line="55">In externally visible method 'GridColumnPropertyDialog.GridColumnPropertyDialog(TDataGrid)', validate parameter 'grid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RowColorsPropertyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.Table.TDataGrid)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="RowColorsPropertyDialog.xaml.cs" Line="53">In externally visible method 'RowColorsPropertyDialog.RowColorsPropertyDialog(TDataGrid)', validate parameter 'grid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TGridColumnCustomGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="TGridColumnCustomGridItem.cs" Line="68">Modify 'TGridColumnCustomGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="TGridColumnCustomGridItem.cs" Line="68">Ensure that 'TGridColumnCustomGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TGridColumnCustomGridItem.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TGridColumnFieldGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="TGridColumnFieldGridItem.cs" Line="127">Modify 'TGridColumnFieldGridItem.ComboBoxSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="TGridColumnFieldGridItem.cs" Line="77">Modify 'TGridColumnFieldGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Table" File="TGridColumnFieldGridItem.cs" Line="77">Ensure that 'TGridColumnFieldGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.Terminals">
       <Types>
        <Type Name="TestConnectionButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestConnectionButton.cs" Line="71">Modify 'TestConnectionButton.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestConnectionButton.cs" Line="71">Ensure that 'TestConnectionButton.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TestConnectionButton.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="launch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestConnectionButton.cs" Line="92">Correct the casing of 'launch' in member name 'TestConnectionButton.launchEditorButton_Click(object, RoutedEventArgs)' by changing it to 'Launch'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestConnectionButton.cs" Line="92">Remove the underscores from member name 'TestConnectionButton.launchEditorButton_Click(object, RoutedEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TestDisConnectionButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DisConnection" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'DisConnection' in type name 'TestDisConnectionButton' exists as a discrete term. If your usage is intended to be single word, case it as 'Disconnection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestDisConnectionButton.cs" Line="73">Modify 'TestDisConnectionButton.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestDisConnectionButton.cs" Line="73">Ensure that 'TestDisConnectionButton.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TestDisConnectionButton.launchEditorButton' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#launchEditorButton_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="launch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestDisConnectionButton.cs" Line="94">Correct the casing of 'launch' in member name 'TestDisConnectionButton.launchEditorButton_Click(object, RoutedEventArgs)' by changing it to 'Launch'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\Terminals" File="TestDisConnectionButton.cs" Line="94">Remove the underscores from member name 'TestDisConnectionButton.launchEditorButton_Click(object, RoutedEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="StateGrid.Control.TMapping">
       <Types>
        <Type Name="LayerFileEditorDlg" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Dlg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dlg' in type name 'LayerFileEditorDlg'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MapConnectionDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(StateGrid.Control.TMapping.TMaps)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="57">In externally visible method 'MapConnectionDialog.MapConnectionDialog(TMaps)', validate parameter 'map' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapFileEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(VisualDiagram.CanvasEx,System.Type,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="98">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="104">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="112">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="112">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="91">In externally visible method 'MapFileEditor.MapFileEditor(CanvasEx, Type, string)', validate parameter 'canvas' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnLoad_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="246">In method 'MapFileEditor.btnLoad_Click(object, RoutedEventArgs)', object 'shpStream' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'shpStream' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="237">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnLoad_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="313">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="313">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'MapFileEditor.btnOK_Click(object, RoutedEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImagesSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="168">In method 'MapFileEditor.ImagesSelectionChanged(object, SelectionChangedEventArgs)', call System.IDisposable.Dispose on object 'new MemoryStream(resource.DbfResource.Content)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="168">In method 'MapFileEditor.ImagesSelectionChanged(object, SelectionChangedEventArgs)', call System.IDisposable.Dispose on object 'new MemoryStream(resource.ShpResource.Content)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapFileItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,VisualDiagram.Common.BusinessResource,VisualDiagram.Common.BusinessResource)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="shp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapFileEditor.xaml.cs" Line="401">In method 'MapFileItem.MapFileItem(string, BusinessResource, BusinessResource)', correct the spelling of 'shp' in parameter name 'shpResource' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShpResource" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Shp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Shp' in member name 'MapFileItem.ShpResource' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MapItemNameGridItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="276">Modify 'MapItemNameGridItem.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="276">Ensure that 'MapItemNameGridItem.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMapItemSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="511">Modify 'MapItemNameGridItem.OnMapItemSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMapLayerSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="546">Modify 'MapItemNameGridItem.OnMapLayerSelectionChanged(object, SelectionChangedEventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyValueChanged()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-04-29 02:21:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\Work\启明星\visualdesktop\融合平台客户端\可视化控件\StateGrid.Control.Designer.Plugin\TMapping" File="MapConnectionDialog.xaml.cs" Line="364">Modify 'MapItemNameGridItem.PropertyValueChanged()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose methods should call base class dispose" Category="Microsoft.Usage" CheckId="CA2215">
   <Name>Dispose methods should call base class dispose</Name>
   <Description>If a type inherits from a disposable type, it must call the Dispose method of the base type from within its own Dispose method.</Description>
   <Resolution Name="Default">Ensure that method {0} calls base.{0} in all possible control flow paths.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182330(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNewerVersion">Either replace the suffix '{0}' in type name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the type it replaces.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="DisposeSignature">Ensure that {0} is declared as public and sealed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="FieldImplicitAnsi">To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Resolution>
   <Resolution Name="Parameter">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182294(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="reliabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
